server {
  listen 80;
  server_name ${SERVER_NAME};
  
  # Redirect all HTTP traffic to HTTPS
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name ${SERVER_NAME};

  # Certificate paths (verify these files exist in your container)
  ssl_certificate     /etc/ssl/certs/bundle.crt;
  ssl_certificate_key /etc/ssl/private/private.key;

  # Enable modern TLS protocols and ciphers
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
  ssl_prefer_server_ciphers off;

  # Optimize SSL performance
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;

  add_header Strict-Transport-Security "max-age=63072000" always;

  location = /favicon.ico {
    root /usr/share/nginx/html;
    default_type image/x-icon;
    add_header Access-Control-Allow-Origin *;
  }

  location = /logo.png {
    root /usr/share/nginx/html;
    add_header Access-Control-Allow-Origin *;
  }

  location = /resetPasswordExpired {
    root /usr/share/nginx/html;
    try_files /linkExpired.html =404;
    add_header Access-Control-Allow-Origin *;
  }

  location = /resetPasswordUsed {
    root /usr/share/nginx/html;
    try_files /linkUsed.html =404;
    add_header Access-Control-Allow-Origin *;
  }

  location = /resetPasswordSuccess {
    root /usr/share/nginx/html;
    try_files /linkWorked.html =404;
    add_header Access-Control-Allow-Origin *;
  }

  location = /.env {
    return 302 https://www.youtube.com/watch?v=dQw4w9WgXcQ;
  }

  location / {
    proxy_pass http://fastapi:80;
    proxy_no_cache 1;
    proxy_cache_bypass 1;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;  # Critical for HTTPS
    proxy_set_header X-Real-IP $remote_addr;
  }
}